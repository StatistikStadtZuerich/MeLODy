openapi: 3.1.0
info:
  title: 'SSZ ChatGPT Prototype'
  version: 1.0.0
  description: 'API description'
servers:
  - url: 'https://ae79-89-26-109-33.ngrok-free.app/api/v2'
    description: 'API server'
paths:
  /sparql/definitions:
    get:
      summary: 'Get all dataset definitions to form a valid sparql query'
      operationId: datasetDefinitionGetter
      responses: { '200': { description: 'List of all dataset definitions', content: { application/json: { schema: { type: array, items: { $ref: '#/components/schemas/DatasetDefinition' } } } } } }
  /sparql:
    post:
      summary: 'Execute a SPARQL query with the given DatasetDefinition.'
      operationId: sparqlExecution
      requestBody: { required: true, content: { application/json: { schema: { type: object, required: [ query ], properties: { query: { type: string, description: 'SPARQL query to execute' } } } } } }
      responses: { '200': { description: 'Parsed query results' }, '400': { description: 'Missing query or no results found' } }
components:
  schemas:
    DatasetDefinition:
      type: object
      description: "Dataset definition containing metadata and sparql query structure information.\n"
      properties: { id: { type: string, description: 'Unique identifier for this dataset' }, name: { type: string, description: 'Human-readable name' }, description: { type: string, description: 'Description of what the dataset contains' }, datasetUri: { type: string, description: 'The main URI for the dataset (used in WHERE clause)' }, variables: { type: array, description: 'Variables to select and their descriptions', items: { type: object, required: [ name, description, type ], properties: { name: { type: string, description: 'Variable name without ? (e.g., "Wirtschaftliche_Wohnbevoelkerung")' }, description: { type: string, description: 'Human-readable description' }, type: { type: string, enum: [ string, number, date ], description: 'Data type of this variable' } } } }, predicates: { type: array, description: 'Predicates (paths in the graph) needed for this query', items: { type: object, required: [ path, description ], properties: { path: { type: string, description: 'The property path (e.g., "sszP:ZEIT/schema:inDefinedTermSet")' }, fixedValue: { type: string, description: 'Fixed value if not a variable (e.g., "sszTS:Jahr")' }, variableName: { type: string, description: 'Variable name if not fixed (without ?)' }, description: { type: string, description: 'Description of what this predicate represents' } } } } }
      required: [ id, name, description, datasetUri, variables, predicates ]
      example: { id: population, name: 'Population Data', description: 'Economic residential population of Zurich by year', datasetUri: 'https://ld.stadt-zuerich.ch/statistics/000201/observation', variables: [ { name: Datum, description: 'Date/time of the observation', type: date }, { name: Wirtschaftliche_Wohnbevoelkerung, description: 'Economic residential population count', type: number } ], predicates: [ { path: 'sszP:ZEIT/schema:inDefinedTermSet', fixedValue: 'sszTS:Jahr', description: 'Specifies that time is measured in years' } ] }
tags: [ ]
